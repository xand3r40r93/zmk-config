/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MOD_MORPH_SHIFT(NAME, KEY, MOD_KEY) \
  mm_##NAME: mm_##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
    keep-mods = <(MOD_LSFT|MOD_RSFT)>; \
  };

#define TAP_DANCE(NAME, KEY1, KEY2) \
  td_##NAME: td_##NAME { \
    compatible = "zmk,behavior-tap-dance"; \
      label = #NAME; \
      #binding-cells = <0>; \
      bindings = <&kp KEY1>, <&kp KEY2>; \
      tapping-term-ms = <175>; \
  };

#define L_DEF 0
#define L_NAV 1
#define L_FN  2
#define L_NUM 3

// KEY POSITION REFERENCE
// ------------------------------------------------------------------
// | 00 | 01 | 02 | 03 | 04 | 05 |    | 06 | 07 | 08 | 09 | 10 | 11 |
// | 12 | 13 | 14 | 15 | 16 | 17 |    | 18 | 19 | 20 | 21 | 22 | 23 |
// | 24 | 25 | 26 | 27 | 28 | 29 |    | 30 | 31 | 32 | 33 | 34 | 35 |
//                | 36 | 37 | 38 |    | 39 | 40 | 41 |

/ {

  behaviors {
    lt_b: layer_tap_balanced {
      compatible = "zmk,behavior-hold-tap";
      label = "LAYER_TAP_BALANCED";
      #binding-cells = <2>;
      bindings = <&mo>, <&kp>;
      flavor = "balanced";
      tapping-term-ms = <500>;
    };
    lt_tp: layer_tap_tap_preferred {
      compatible = "zmk,behavior-hold-tap";
      label = "LAYER_TAP_TAP_PREFERRED";
      #binding-cells = <2>;
      bindings = <&mo>, <&kp>;
      flavor = "tap-preferred";
      tapping-term-ms = <500>;
    };
    ht_b: hold_tap_balanced {
      compatible = "zmk,behavior-hold-tap";
      label = "HOLD_TAP_BALANCED";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
    };
    mt_l: mod_tap_left {
      compatible = "zmk,behavior-hold-tap";
      label = "MOD_TAP_LEFT";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
    };
    mt_r: mod_tap_right {
      compatible = "zmk,behavior-hold-tap";
      label = "MOD_TAP_RIGHT";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
    };
    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <0>;
    };
    MOD_MORPH_SHIFT(sqt, SQT, GRAVE)     // ' | `
    MOD_MORPH_SHIFT(equal, EQUAL, UNDER) // = | _
    TAP_DANCE(grave, GRAVE, ESC)
    TAP_DANCE(brackets, LBKT, RBKT)
    TAP_DANCE(tab, TAB, CLCK)
  };

  keymap {
    compatible = "zmk,keymap";

      default_layer {
        bindings = <

          &td_grave                     // Tab       -> Esc |
          &kp Q                         // q         -> q   | Q
          &kp W                         // w         -> w   | W
          &kp E                         // e         -> e   | E
          &kp R                         // r         -> r   | R
          &kp T                         // t         -> t   | T

          &kp Y                         // y         -> y   | Y
          &kp U                         // u         -> u   | U
          &kp I                         // i         -> i   | I
          &kp O                         // o         -> o   | O
          &kp P                         // p         -> p   | P
          &td_brackets                  // \         -> =   | _

          &td_tab                       // Caps Lock
          &mt_l LSHFT A                 // a
          &mt_l LCTRL S                 // s
          &mt_l LALT  D                 // d
          &lt_b L_NAV F                 // f
          &lt_b L_FN G                  // g

          &kp H                         // h
          &kp J                  // j
          &mt_r RALT  K                 // k
          &mt_r RCTRL L                 // l
          &mt_r RSHFT SEMI              // ;
          &kp SQT                       // '
          
          &none                         // Left Shift
          &kp Z                         // z
          &kp X                         // x
          &kp C                         // c
          &lt_b L_NUM V                 // v
          &kp B                         // b

          &kp N                         // n
          &kp M                         // m
          &kp COMMA                     // ,
          &kp DOT                       // .
          &kp FSLH                      // /
          &kp RET                       // Right Shift    -> RET 

          &none                         // Left Option
          &mt LCMD DEL                  // Left Command
          &kp SPACE                     // Space

          &kp SPACE                     // Space
          &mt RCMD BSPC                 // Right Command
          &none                         // Right Option

        >;
      };

      navigation_layer {
        bindings = <

          &none
          &none
          &none
          &none
          &none
          &none

          &kp PG_UP
          &kp HOME
          &kp UP
          &kp END
          &kp BSPC
          &none

          &none
          &kp LSHFT
          &kp LCTRL
          &kp LALT
          &none
          &none

          &kp PG_DN
          &kp LEFT
          &kp DOWN
          &kp RIGHT
          &kp RET
          &none

          &none
          &none
          &none
          &none
          &none
          &none

          &none
          &none
          &none
          &none
          &none
          &none

          &none
          &kp LCMD
          &kp SPACE

          &kp SPACE
          &none
          &none

        >;
      };

      fn_layer {
        bindings = <

          &none
          &none
          &none
          &none
          &none
          &none

          &none
          &kp F7
          &kp F8
          &kp F9
          &kp F12
          &none

          &none
          &kp LSHFT
          &kp LALT
          &kp LCTRL
          &none
          &none

          &none
          &kp F4
          &kp F5
          &kp F6
          &kp F11
          &none

          &none
          &none
          &none
          &none
          &none
          &none

          &none
          &kp F1
          &kp F2
          &kp F3
          &kp F10
          &none

          &none
          &kp LCMD
          &kp SPACE

          &kp SPACE
          &none
          &none

        >;
      };

      number_layer {
        bindings = <
          
          &none
          &none
          &none
          &none
          &none
          &none

          &none
          &kp N7
          &kp N8
          &kp N9
          &none
          &none

          &none
          &kp LSHFT
          &kp LCTRL
          &kp LALT
          &none
          &none

          &none
          &kp N4
          &kp N5
          &kp N6
          &none
          &none

          &none
          &none
          &none
          &none
          &none
          &none

          &none
          &kp N1
          &kp N2
          &kp N3
          &none
          &kp RET

          &none
          &none
          &none

          &kp N0
          &none
          &none

        >;
      };

      lower_layer {
        bindings = <

        &kp TAB
        &kp N1
        &kp N2
        &kp N3
        &kp N4
        &kp N5
        
        &kp N6
        &kp N7
        &kp N8
        &kp N9
        &kp N0
        &kp BSPC

        &bt BT_CLR
        &bt BT_SEL 0
        &bt BT_SEL 1
        &bt BT_SEL 2
        &bt BT_SEL 3
        &bt BT_SEL 4

        &kp LEFT
        &kp DOWN
        &kp UP
        &kp RIGHT
        &none
        &none

        &kp LSHFT
        &none
        &none
        &none
        &none
        &none

        &none
        &none
        &none
        &none
        &none
        &none

        &kp LGUI
        &none
        &kp SPACE
        
        &kp RET
        &none
        &kp RALT

      >;
    };

    raise_layer {
      bindings = <

        &kp TAB
        &kp EXCL
        &kp AT
        &kp HASH
        &kp DLLR
        &kp PRCNT

        &kp CARET
        &kp AMPS
        &kp KP_MULTIPLY
        &kp LPAR
        &kp RPAR
        &kp BSPC

        &kp LCTRL
        &none
        &none
        &none
        &none
        &none
        
        &kp MINUS
        &kp EQUAL
        &kp LBKT
        &kp RBKT
        &kp BSLH
        &kp GRAVE

        &kp LSHFT
        &none
        &none
        &none
        &none
        &none

        &kp UNDER
        &kp PLUS
        &kp LBRC
        &kp RBRC
        &kp PIPE
        &kp TILDE

        &kp LGUI
        &none
        &kp SPACE
        
        &kp RET
        &none
        &kp RALT

      >;
    };

  };

};
