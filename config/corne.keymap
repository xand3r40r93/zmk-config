/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MOD_MORPH_SHIFT(NAME, KEY, MOD_KEY) \
  mm_##NAME: mm_##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
  };
#define MOD_MORPH_SHIFT_MASKED(NAME, KEY, MOD_KEY) \
  mm_##NAME: mm_##NAME { \
    compatible = "zmk,behavior-mod-morph"; \
    label = #NAME; \
    #binding-cells = <0>; \
    bindings = <&kp KEY>, <&kp MOD_KEY>; \
    mods = <(MOD_LSFT|MOD_RSFT)>; \
    masked_mods = <(MOD_LSFT|MOD_RSFT)>; \
  };

/ {

  behaviors {
    MOD_MORPH_SHIFT_MASKED(single_quote, SINGLE_QUOTE, GRAVE)
  };

  keymap {
    compatible = "zmk,keymap";

      default_layer {
        bindings = <
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

          &kp ESC                       // Tab       -> Esc |
          &kp Q                         // q         -> q   | Q
          &kp W                         // w         -> w   | W
          &kp E                         // e         -> e   | E
          &kp R                         // r         -> r   | R
          &kp T                         // t         -> t   | T

          &kp Y                         // y         -> y   | Y
          &kp U                         // u         -> u   | U
          &kp I                         // i         -> i   | I
          &kp O                         // o         -> o   | O
          &kp P                         // p         -> p   | P
          &kp EQUAL                     // \         -> =   | _

          &kp TAB                       // Caps Lock
          &kp A                         // a
          &kp S                         // s
          &kp D                         // d
          &kp F                         // f
          &kp G                         // g

          &kp H                         // h
          &kp J                         // j
          &kp K                         // k
          &kp L                         // l
          &mm_single_quote              // ;
          &kp RETURN                    // '
          
          &kp              LSHFT        // Left Shift
          &mt LEFT_CONTROL Z            // z
          &mt LEFT_ALT     X            // x
          &mt LEFT_SHIFT   C            // c
          &mt LEFT_COMMAND V            // v
          &kp              B            // b

          &kp               N           // n
          &mt RIGHT_COMMAND M           // m
          &mt RIGHT_SHIFT   COMMA       // ,
          &mt RIGHT_ALT     DOT         // .
          &mt RIGHT_CONTROL FSLH        // /
          &kp               RETURN      // Right Shift    -> Return 

          &kp LGUI                      // Left Option
          &mo 2                         // Left Command
          &kp SPACE                     // Space

          &kp SPACE                     // Space
          &mo 1                         // Right Command
          &kp BACKSPACE                 // Right Option

        >;
      };

      lower_layer {
        bindings = <
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |

        &kp TAB
        &kp N1
        &kp N2
        &kp N3
        &kp N4
        &kp N5
        
        &kp N6
        &kp N7
        &kp N8
        &kp N9
        &kp N0
        &kp BSPC

        &bt BT_CLR
        &bt BT_SEL 0
        &bt BT_SEL 1
        &bt BT_SEL 2
        &bt BT_SEL 3
        &bt BT_SEL 4

        &kp LEFT
        &kp DOWN
        &kp UP
        &kp RIGHT
        &trans
        &trans

        &kp LSHFT
        &trans
        &trans
        &trans
        &trans
        &trans

        &trans
        &trans
        &trans
        &trans
        &trans
        &trans

        &kp LGUI
        &trans
        &kp SPACE
        
        &kp RET
        &trans
        &kp RALT

      >;
    };

    raise_layer {
      bindings = <
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |

        &kp TAB
        &kp EXCL
        &kp AT
        &kp HASH
        &kp DLLR
        &kp PRCNT

        &kp CARET
        &kp AMPS
        &kp KP_MULTIPLY
        &kp LPAR
        &kp RPAR
        &kp BSPC

        &kp LCTRL
        &trans
        &trans
        &trans
        &trans
        &trans
        
        &kp MINUS
        &kp EQUAL
        &kp LBKT
        &kp RBKT
        &kp BSLH
        &kp GRAVE

        &kp LSHFT
        &trans
        &trans
        &trans
        &trans
        &trans

        &kp UNDER
        &kp PLUS
        &kp LBRC
        &kp RBRC
        &kp PIPE
        &kp TILDE

        &kp LGUI
        &trans
        &kp SPACE
        
        &kp RET
        &trans
        &kp RALT

      >;
    };

  };

};
